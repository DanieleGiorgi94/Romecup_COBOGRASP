/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

public void checkbox1_clicked1(GCheckbox source, GEvent event) { //_CODE_:checkbox1:564702:
  //println("checkbox1 - GCheckbox >> GEvent." + event + " @ " + millis());
  if (balance == 0)
    balance = 1;
  else
    balance = 0;
} //_CODE_:checkbox1:564702:

public void slider1_change1(GSlider source, GEvent event) { //_CODE_:slider1:624755:
  //println("slider1 - GSlider >> GEvent." + event + " @ " + millis());
  xObj = slider1.getValueF();
} //_CODE_:slider1:624755:

public void slider2_change1(GSlider source, GEvent event) { //_CODE_:slider2:459156:
  //println("slider2 - GSlider >> GEvent." + event + " @ " + millis());
  yObj = slider2.getValueF();
} //_CODE_:slider2:459156:

public void slider3_change1(GSlider source, GEvent event) { //_CODE_:slider3:554184:
  //println("slider3 - GSlider >> GEvent." + event + " @ " + millis());
  zObj = slider3.getValueF();
} //_CODE_:slider3:554184:

public void slider4_change1(GSlider source, GEvent event) { //_CODE_:slider4:447907:
  //println("slider4 - GSlider >> GEvent." + event + " @ " + millis());
  eyeR = slider4.getValueF();
} //_CODE_:slider4:447907:

public void button1_click1(GButton source, GEvent event) { //_CODE_:button1:487496:

  //println("button1 - GButton >> GEvent." + event + " @ " + millis());
  if (close == 0){
    close = 1;
    open = 0;
    blocked = true;
  }
  else
    close = 0;
} //_CODE_:button1:487496:

public void button2_click1(GButton source, GEvent event) { //_CODE_:button2:629448:

  //println("button2 - GButton >> GEvent." + event + " @ " + millis());
  if (open == 0){
    open = 1;
    close = 0;
    blocked = false;
  }
  else
    open = 0;

} //_CODE_:button2:629448:

public void button3_click1(GButton source, GEvent event) { //_CODE_:button3:463985:
  //println("button3 - GButton >> GEvent." + event + " @ " + millis());
  thetaDes = 0;
} //_CODE_:button3:463985:

public void button4_click1(GButton source, GEvent event) { //_CODE_:button4:769683:
  //println("button4 - GButton >> GEvent." + event + " @ " + millis());
  thetaDes = PI/2;
} //_CODE_:button4:769683:

public void button5_click1(GButton source, GEvent event) { //_CODE_:button5:915853:
  //println("button5 - GButton >> GEvent." + event + " @ " + millis());
  thetaDes = - PI/2;
} //_CODE_:button5:915853:

public void imgButton1_click1(GImageButton source, GEvent event) { //_CODE_:imgButton1:383927:
  println("imgButton1 - GImageButton >> GEvent." + event + " @ " + millis());
} //_CODE_:imgButton1:383927:



// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setCursor(ARROW);
  surface.setTitle("Sketch Window");
  checkbox1 = new GCheckbox(this, 16, 652, 120, 20);
  checkbox1.setIconAlign(GAlign.LEFT, GAlign.MIDDLE);
  checkbox1.setText("Attiva controllo");
  checkbox1.setOpaque(false);
  checkbox1.addEventHandler(this, "checkbox1_clicked1");
  slider1 = new GSlider(this, 846, 538, 150, 40, 10.0);
  slider1.setLimits(0.0, -500.0, 500.0);
  slider1.setNumberFormat(G4P.DECIMAL, 2);
  slider1.setOpaque(false);
  slider1.addEventHandler(this, "slider1_change1");
  label1 = new GLabel(this, 884, 518, 80, 20);
  label1.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label1.setText("xObj");
  label1.setOpaque(false);
  label2 = new GLabel(this, 779, 492, 80, 32);
  label2.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label2.setText("yObj");
  label2.setOpaque(false);
  slider2 = new GSlider(this, 844, 524, 150, 49, 10.0);
  slider2.setRotation(PI/2, GControlMode.CORNER);
  slider2.setLimits(0.0, -500.0, 500.0);
  slider2.setNumberFormat(G4P.DECIMAL, 2);
  slider2.setOpaque(false);
  slider2.addEventHandler(this, "slider2_change1");
  slider3 = new GSlider(this, 844, 613, 150, 40, 10.0);
  slider3.setLimits(0.0, -500.0, 500.0);
  slider3.setNumberFormat(G4P.DECIMAL, 2);
  slider3.setOpaque(false);
  slider3.addEventHandler(this, "slider3_change1");
  label3 = new GLabel(this, 881, 595, 80, 20);
  label3.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label3.setText("zObj");
  label3.setOpaque(false);
  slider4 = new GSlider(this, 884, 20, 100, 40, 10.0);
  slider4.setLimits(800.0, 0.0, 2000.0);
  slider4.setNumberFormat(G4P.DECIMAL, 2);
  slider4.setOpaque(false);
  slider4.addEventHandler(this, "slider4_change1");
  label4 = new GLabel(this, 894, 5, 80, 20);
  label4.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label4.setText("zoom");
  label4.setOpaque(false);
  button1 = new GButton(this, 17, 608, 80, 30);
  button1.setText("Grasping");
  button1.addEventHandler(this, "button1_click1");
  button2 = new GButton(this, 17, 572, 80, 30);
  button2.setText("Release");
  button2.addEventHandler(this, "button2_click1");
  button3 = new GButton(this, 193, 652, 20, 20);
  button3.setText("L");
  button3.addEventHandler(this, "button3_click1");
  button4 = new GButton(this, 167, 652, 20, 20);
  button4.setText("U");
  button4.addEventHandler(this, "button4_click1");
  button5 = new GButton(this, 142, 652, 20, 20);
  button5.setText("D");
  button5.addEventHandler(this, "button5_click1");
}

// Variable declarations 
// autogenerated do not edit
GCheckbox checkbox1; 
GSlider slider1; 
GLabel label1; 
GLabel label2; 
GSlider slider2; 
GSlider slider3; 
GLabel label3; 
GSlider slider4; 
GLabel label4; 
GButton button1; 
GButton button2; 
GButton button3; 
GButton button4; 
GButton button5; 
GImageButton imgButton1; 